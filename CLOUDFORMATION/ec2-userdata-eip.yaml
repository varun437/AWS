AWSTemplateFormatVersion: '2010-09-09'
Description: Template to Create an EC2 instance in a VPC using an Elastic ip and install some scripts using Userdata
   
Parameters:

  ImageId:
    Type: String
    Description: 'Linux 2 AMI for Ireland eu-west1 Region'
    Default: 'ami-061ac2e015473fbe2'
  VpcId:
    Type: String
    Description: VPC id
    Default: vpc-0bd7ebbc85d204e50
  SubnetId:
    Type: String
    Description: Subnet in which to launch an EC2
    Default: subnet-0335b93bb35d2e030
  AvailabilityZone:
    Type: String
    Description: Availability Zone into which instance will launch
    Default: us-east-1b
  InstanceType:
    Type: String
    Description: Choosing  t2 micro because it is free
    Default: t2.micro
  KeyName:
    Description: SSH Keypair to login to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: VARUN

Resources:
  DemoInstance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      AvailabilityZone: !Ref AvailabilityZone
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref DemoSecurityGroup
      SubnetId: !Ref SubnetId
      Tags:
        - Key: Name
          Value: Instance1
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash
            yum update -y
            sudo amazon-linux-extras install nginx1.12
            service nginx start
            echo '<h1>WEBSERVER-1</h1>' >> /usr/share/nginx/html/index.html

  DemoElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref DemoInstance 

  DemoSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: SG to allow HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: HTTP-SG

Outputs:
  DemoInstanceId:
    Description: Instance Id 
    Value: !Ref DemoInstance
